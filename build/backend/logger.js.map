{"version":3,"sources":["../../src/backend/logger.js"],"names":["winston","require","moment","fs","logDir","existsSync","mkdirSync","timeStampFormat","format","logger","Logger","transports","Console","level","name","filename","datePattern","zippedArchive","maxSize","maxFiles","exceptionHandlers","cli","exports"],"mappings":"aAAA,IAAIA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAArB;;AAEA,IAAIC,MAAM,GAAGD,OAAO,CAAC,QAAD,CAApB;AACA,IAAIE,EAAE,GAAGF,OAAO,CAAC,IAAD,CAAhB;AACA,IAAIG,MAAM,GAAG,QAAb;;AAEA,IAAI,CAACD,EAAE,CAACE,UAAH,CAAcD,MAAd,CAAL,EAA4B;AACxBD,EAAAA,EAAE,CAACG,SAAH,CAAaF,MAAb;AACH;;AAED,SAASG,eAAT,GAA2B;AACvB,SAAOL,MAAM,GAAGM,MAAT,CAAgB,4BAAhB,CAAP;AACH;;AAED,IAAIC,MAAM,GAAG,IAAKT,OAAO,CAACU,MAAb,CAAqB;AAC9BC,EAAAA,UAAU,EAAE;AACR,MAAKX,OAAO,CAACW,UAAR,CAAmBC,OAAxB;AACI;AACIC,IAAAA,KAAK,EAAE,OADX,EADJ,CADQ;;;AAMR,OAAKZ,OAAO,CAAC,2BAAD,CAAZ,EAA2C;AACvCa,IAAAA,IAAI,EAAE,cADiC;AAEvCC,IAAAA,QAAQ,EAAGX,MAAM,GAAC,qBAFqB;AAGvCY,IAAAA,WAAW,EAAE,eAH0B;AAIvCC,IAAAA,aAAa,EAAE,IAJwB;AAKvCC,IAAAA,OAAO,EAAE,KAL8B;AAMvCC,IAAAA,QAAQ,EAAE,KAN6B;AAOvCN,IAAAA,KAAK,EAAE,SAPgC,EAA3C,CANQ;;AAeR,OAAKZ,OAAO,CAAC,2BAAD,CAAZ,EAA2C;AACvCa,IAAAA,IAAI,EAAE,WADiC;AAEvCC,IAAAA,QAAQ,EAAGX,MAAM,GAAC,kBAFqB;AAGvCY,IAAAA,WAAW,EAAE,eAH0B;AAIvCC,IAAAA,aAAa,EAAE,IAJwB;AAKvCC,IAAAA,OAAO,EAAE,KAL8B;AAMvCC,IAAAA,QAAQ,EAAE,KAN6B;AAOvCN,IAAAA,KAAK,EAAE,MAPgC,EAA3C,CAfQ;;AAwBR,OAAKZ,OAAO,CAAC,2BAAD,CAAZ,EAA2C;AACvCa,IAAAA,IAAI,EAAE,YADiC;AAEvCC,IAAAA,QAAQ,EAAGX,MAAM,GAAC,iBAFqB;AAGvCY,IAAAA,WAAW,EAAE,eAH0B;AAIvCC,IAAAA,aAAa,EAAE,IAJwB;AAKvCC,IAAAA,OAAO,EAAE,KAL8B;AAMvCC,IAAAA,QAAQ,EAAE,KAN6B;AAOvCN,IAAAA,KAAK,EAAE,OAPgC,EAA3C,CAxBQ,CADkB;;;;AAoC9BO,EAAAA,iBAAiB,EAAE;AACf,OAAKnB,OAAO,CAAC,2BAAD,CAAZ,EAA2C;AACvCa,IAAAA,IAAI,EAAE,gBADiC;AAEvCC,IAAAA,QAAQ,EAAGX,MAAM,GAAC,uBAFqB;AAGvCY,IAAAA,WAAW,EAAE,eAH0B;AAIvCC,IAAAA,aAAa,EAAE,IAJwB;AAKvCC,IAAAA,OAAO,EAAE,KAL8B;AAMvCC,IAAAA,QAAQ,EAAE,KAN6B,EAA3C,CADe,CApCW,EAArB,CAAb;;;;;AAgDAV,MAAM,CAACY,GAAP;;AAEAC,OAAO,CAACb,MAAR,GAAiBA,MAAjB","sourcesContent":["var winston = require('winston');\r\n\r\nvar moment = require('moment');\r\nvar fs = require('fs');\r\nvar logDir = '../log';\r\n\r\nif (!fs.existsSync(logDir)) {\r\n    fs.mkdirSync(logDir);\r\n}\r\n\r\nfunction timeStampFormat() {\r\n    return moment().format('YYYY-MM-DD HH:mm:ss.SSS ZZ');                            \r\n};\r\n\r\nvar logger = new (winston.Logger)({\r\n    transports: [\r\n        new (winston.transports.Console)(\r\n            {\r\n                level: 'debug'\r\n            }\r\n        ),\r\n        new (require('winston-daily-rotate-file'))({\r\n            name: 'verbose-file',\r\n            filename:  logDir+'/verbose-%DATE%.log',\r\n            datePattern: 'YYYY-MM-DD-HH',\r\n            zippedArchive: true,\r\n            maxSize: '20m',\r\n            maxFiles: '14d',\r\n            level: 'verbose'\r\n        }),\r\n        new (require('winston-daily-rotate-file'))({\r\n            name: 'info-file',\r\n            filename:  logDir+'/info-%DATE%.log',\r\n            datePattern: 'YYYY-MM-DD-HH',\r\n            zippedArchive: true,\r\n            maxSize: '20m',\r\n            maxFiles: '14d',\r\n            level: 'info'\r\n        }),\r\n        new (require('winston-daily-rotate-file'))({\r\n            name: 'error-file',\r\n            filename:  logDir+'/err-%DATE%.log',\r\n            datePattern: 'YYYY-MM-DD-HH',\r\n            zippedArchive: true,\r\n            maxSize: '20m',\r\n            maxFiles: '14d',\r\n            level: 'error'\r\n        }),\r\n        \r\n    ],\r\n    exceptionHandlers: [\r\n        new (require('winston-daily-rotate-file'))({\r\n            name: 'exception-file',\r\n            filename:  logDir+'/exception-%DATE%.log',\r\n            datePattern: 'YYYY-MM-DD-HH',\r\n            zippedArchive: true,\r\n            maxSize: '20m',\r\n            maxFiles: '14d',\r\n        })\r\n    ]\r\n});\r\n\r\nlogger.cli();\r\n\r\nexports.logger = logger\r\n"],"file":"logger.js"}
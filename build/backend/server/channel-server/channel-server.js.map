{"version":3,"sources":["../../../../src/backend/server/channel-server/channel-server.js"],"names":["EventEmitter","require","util","utiles","async","logger","ChannelServer","conf","server","signal","serverName","signalingServer","callback","host","getIP","port","zookeeper","redis","balancing","SCALE","BUFFER_COUNT","MAX_LEVEL","REPLICA_BASE_NUMBER","Error","self","parallel","parallelCallback","startReplicas","Math","pow","Number","nodeManager","NodeManager","err","addServerNode","path","substring","lastIndexOf","length","serverNodePath","split","replicas","sessionManger","SessionManager","_start","info","process","on","error","toString","removeAll","nextTick","exit","roomID","room","userID","addUserinfo","asyncCB","updateServerInfo","result","removeUserinfo","removeServerinfo"],"mappings":"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","sourcesContent":["var EventEmitter = require('events').EventEmitter;\r\nvar util = require('util');\r\nvar utiles = require('./../../utiles/utiles')\r\nimport {SessionManager} from '../../session-manager/session-manager'\r\nimport { NodeManager } from '../../node-manager/node-manager';\r\nvar async = require('async')\r\nconst  logger  = require('../../logger').logger\r\n\r\nclass ChannelServer extends EventEmitter{\r\n\r\n    constructor(){\r\n\r\n        super()\r\n        this.conf={};\r\n        this.server\r\n        this.signal\r\n        this.serverName\r\n\r\n    }\r\n\r\n    init(conf,signalingServer,callback){\r\n\r\n        this.conf ={\r\n            host: conf.host || utiles.getIP(),\r\n            port: conf.port || 9090,\r\n            zookeeper: conf.zookeeper,\r\n            redis: conf.redis,\r\n            \r\n        }\r\n\r\n        this.serverName= conf.serverName\r\n\r\n        this.conf.balancing = {\r\n            SCALE: 60, // 단계별 Connection 수\r\n            BUFFER_COUNT: 10, // replica 수정에 대한 인계치 버퍼\r\n            MAX_LEVEL: 4, // scale 배수\r\n            REPLICA_BASE_NUMBER: 4 //\r\n        };\r\n\r\n        if(!signalingServer){\r\n            callback(new Error(\"websocket cant not be null\"))\r\n        }\r\n\r\n        this.signal = signalingServer;\r\n\r\n        var self = this\r\n\r\n        async.parallel([\r\n            function(parallelCallback){\r\n    \r\n                var startReplicas = Math.pow(Number(self.conf.balancing['REPLICA_BASE_NUMBER']), Number(self.conf.balancing['MAX_LEVEL']));\r\n    \r\n                self.nodeManager = new NodeManager(self.conf.zookeeper,false,(err)=>{\r\n    \r\n                    if(err){\r\n\r\n                        return parallelCallback(err)\r\n                    }\r\n\r\n                    self.nodeManager.addServerNode(self.conf, startReplicas, function(err, path) {\r\n\r\n                        if(err){\r\n                            return parallelCallback(err)\r\n                        }\r\n                        var serverName = path.substring(path.lastIndexOf('/') + 1, path.length);\r\n                        self.serverNodePath = path;\r\n    \r\n                        self.serverName = serverName.split('^')[0];\r\n    \r\n                        self.replicas = startReplicas;\r\n    \r\n    \r\n                        parallelCallback(err);\r\n                        \r\n    \r\n                        \r\n                    });\r\n                    \r\n\r\n                   \r\n                    \r\n                })\r\n    \r\n            },\r\n            function(parallelCallback){\r\n\r\n                self.sessionManger = new SessionManager(self.conf.redis,(err)=>{\r\n                    if (err) {\r\n                        parallelCallback(err);\r\n                    }\r\n        \r\n                    parallelCallback(null)\r\n                    \r\n                })\r\n            }\r\n        ],(err)=>{\r\n\r\n            if(err){\r\n                return callback(err)\r\n            }\r\n\r\n            self._start()\r\n            logger.info(\"channel server successfully inited port: \"+ conf.port)\r\n            callback(null)\r\n            \r\n\r\n        })\r\n\r\n        \r\n\r\n        process.on('uncaughtException', function(error) {\r\n            logger.info(\"channel uncaughtException.... \"+ error.toString())\r\n            self.sessionManger.removeAll(\"chicRTC\",self.serverName,(err)=>{\r\n                process.nextTick(function() { process.exit(1) })\r\n            })\r\n\r\n        })\r\n\r\n        \r\n        \r\n    }\r\n\r\n    _start(){\r\n        \r\n        var self = this;\r\n        \r\n\r\n        this.signal.on('enterRoom', function(roomID,room,userID) {\r\n\r\n            self.sessionManger.addUserinfo(\r\n                'CHIC_RTC',roomID,userID,(err)=>{\r\n                    //TODO: err handle\r\n                }\r\n            ); \r\n            \r\n        }); \r\n\r\n        this.signal.on(\"createRoom\", function(roomID,room,userID) { \r\n\r\n            async.parallel(\r\n                [\r\n                    (asyncCB)=>{\r\n\r\n                        self.sessionManger.addUserinfo(\r\n                            'CHIC_RTC',room.roomID,userID,asyncCB\r\n                        )\r\n\r\n                    },\r\n                    (asyncCB)=>{\r\n                        self.sessionManger.updateServerInfo(\r\n                            'CHIC_RTC',roomID,self.serverName,asyncCB\r\n                        ); \r\n                    }\r\n                    \r\n                ],\r\n                (err,result)=>{\r\n\r\n                    if(err){\r\n                        //TODO: errHandle\r\n                    }\r\n                    //TODO: something\r\n                }\r\n\r\n            )\r\n\r\n        })\r\n\r\n        this.signal.on(\"leaveRoom\", function(roomID,room,userID) { \r\n\r\n            self.sessionManger.removeUserinfo(\r\n                'CHIC_RTC',\r\n                roomID,\r\n                userID,\r\n                (err)=>{\r\n                    if(err){\r\n                        //TODO: errHandle\r\n                    }\r\n                }\r\n            )\r\n\r\n            if(!room){\r\n\r\n                self.sessionManger.removeServerinfo(\r\n                    'CHIC_RTC',\r\n                    roomID,\r\n                    (err)=>{\r\n                        if(err){\r\n                            //TODO: errHandle\r\n                        }\r\n                    }\r\n                )\r\n            }\r\n\r\n        \r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport {ChannelServer}"],"file":"channel-server.js"}